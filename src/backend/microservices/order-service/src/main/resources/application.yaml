spring.application.name: order-service
server.port: 8103

spring.output.ansi.enabled: ALWAYS
logging.pattern.console: "%d{yyMMdd HH:mm:ss} %highlight(%-5level) %logger{15}: %highlight(%msg) %n"
logging.level.org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

# CONSIDER USING/ADDING PROFILE FOR NETFLIX EUREKA
# URL SHOULD BE: http:/${spring.application.name}
# SAMPLE: http://payment-service INSTEAD OF http://localhost:8102
app:
  inventory:
    host: http://localhost:8101
  payment:
    host: http://localhost:8102

authserver:
  keyset-uri: http://localhost:8080/oauth2/jwks

spring.data.mongodb:
  host: localhost
  port: 27018
  database: order-db
  username: admin
  password: password
  authentication-database: admin

spring.cloud.function:
  definition: orderEventProducer;paymentProcessor;inventoryProcessor

spring.cloud.stream:
  default.producer.useNativeEncoding: true
  bindings:
    order-events-channel:
      destination: order-events
    paymentProcessor-in-0:
      destination: payment-events
      group: order-service-group
    # paymentProcessor-out-0:
    #   destination: processed-order-components
    inventoryProcessor-in-0:
      destination: inventory-events
      group: order-service-group  
    # inventoryProcessor-out-0:
    #   destination: processed-inventory-components
    # shippingProcessor-in-0:
    #   destination: shipping-events
    #   group: order-service-group
    # shippingProcessor-out-0:
    #   destination: processed-order

  kafka:
    binder:
      brokers: "localhost:9094"
      consumer-properties:
        "value.deserializer": org.springframework.kafka.support.serializer.JsonDeserializer
        "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
        
        # TODO: Research more on this -- should be latest to not capture earlier messages
        # "auto.offset.reset": "earliest"
        "auto.offset.reset": "latest"
        "auto.commit.interval.ms": "1000"
        # what about enable.auto.commit????

        "spring.json.trusted.packages": "*" 
      producer-properties:
        "value.serializer": org.springframework.kafka.support.serializer.JsonSerializer
        "key.serializer": org.apache.kafka.common.serialization.StringSerializer


springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan: dev.agasen
  pathsToMatch: /**
  cache.disabled: true


# app.eureka-server: localhost

# eureka:
#   client:
#     serviceUrl:
#       defaultZone: http://${app.eureka-server}:8761/eureka/
#     initialInstanceInfoReplicationIntervalSeconds: 5
#     registryFetchIntervalSeconds: 5
#   instance:
#     leaseRenewalIntervalInSeconds: 5
#     leaseExpirationDurationInSeconds: 5


---
spring.config.activate.on-profile: docker
server.port: 8080

spring.cloud:
  stream:
    kafka:
      binder:
        brokers: "kafka:9092"

spring.data.mongodb:
  host: mongodb
  port: 27017
  username: admin
  password: password
  authentication-database: admin   
