# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Order Service CI/CD

on:
  push:
    paths:
      - 'src/backend/microservices/order-service/**'
    branches: [ "**" ]

jobs:
  build-order-service:
    name: Build Order Service
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        # lets skip test for now
        # TODO: make those tests work!!!
        run: ./gradlew :src:backend:microservices:order-service:build -x test

      # run only on main branch
      - if: github.ref == 'refs/heads/main'
        name: Build and publish Docker image
        run: |
          cd src/backend/microservices/order-service
          docker login -u ${{ SECRETS.DOCKER_USERNAME }} -p ${{ SECRETS.DOCKER_PASSWORD }}
          docker build -t ${{ SECRETS.DOCKER_USERNAME }}/e-commerce-app-order-service .
          docker push ${{ SECRETS.DOCKER_USERNAME }}/e-commerce-app-order-service